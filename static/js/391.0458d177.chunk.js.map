{"version":3,"file":"static/js/391.0458d177.chunk.js","mappings":"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","sources":["Widgets/Cast.js","Widgets/ProviderCard.js","Widgets/Rating/Rating.js","Services/MoviesServices/TvService.js","Widgets/seasonsAndEpisodes.js","Widgets/TvDetails/TvDetails.js","utils/getRatingBg.js"],"sourcesContent":["import React, { useEffect, useState, useRef} from \"react\";\nimport { Image } from 'semantic-ui-react';\nimport NoUser from \"../assets/nouser.png\";\n\nconst Cast = ({ movieCast, creditsTitle }) => {\n  const [active, setActive] = useState('Acting');\n  return (\n    <div>\n      <div className=\"w-full mt-3\">\n        <div className=\"flex gap-4 overflow-x-auto content-end bg-textColor bg-opacity-50 rounded-lg text-white \">\n          {\n            creditsTitle && creditsTitle.map((title, index) => {\n              return (\n                <p key={index} className={`${active === title ? 'bg-white text-main font-bold' : ''}  transition-all hover:[transform:rotateX(180deg)] opacity-100 cursor-pointer p-2 rounded-lg text-md h-fit items-baseline inline`} onClick={() => { setActive(title) }}>{title}</p>\n              )\n            })\n          }\n        </div>\n      </div>\n      <div class=\"flex flex-col  m-auto p-auto no-scrollbar\">\n        <div\n          class=\"flex overflow-x-scroll  no-scrollbar\"\n        >\n\n          <div class=\"flex mt-2\">\n            {\n              movieCast && movieCast.map((res, index) => {\n                return (\n                  res.known_for_department == active ?\n                    <div key={index} className={`${res.id} relative w-52 group mr-5 flex bg-white rounded-lg h-80 transition-all duration-300 overflow-hidden text-center hover:rounded-lg`}>\n                      { res.profile_path ? <Image className=\"group-hover:rounded-lg\" src={process.env.REACT_APP_IMAGE_URL + res.profile_path} onError={i => i.target.style.display='none'} /> : \n                        <Image className=\"group-hover:rounded-lg bg-white m-auto opacity-20\" src={NoUser} />\n                       }\n                      <div className=\"absolute text-left bottom-0 w-full p-1 bg-opacity-40 duration-300 bg-gradient-to-t from-black to-none\">\n                        <p className=\"text-lg font-bold text-white mb-0\">{res.name}</p>\n                        <p className=\"text-cardBG text-md group-hover:hidden duration-300 transition-all\">{res.character}</p>\n                      </div>\n                    </div>\n                    : null\n                )\n              })\n            }\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n};\n\nexport default Cast;","import React from \"react\";\n\nconst ProviderCard = ({ watcher }) => {\n  return (\n    <div className=\"z-10 flex group bg-opacity-20 h-auto cursor-pointer rounded-lg  transition-all  hover:bg-opacity-0 relative\">\n      <span className=\" flex \">\n        {watcher && watcher.slice(0, 3).map((item, index) => {\n          return (\n            <div key={index} className={`${index == 0 ? '' : '-ml-6'} w-12 rounded-full z-10 bg-cover h-12 group-hover:opacity-0`} style={{ backgroundImage: `url(${process.env.REACT_APP_IMAGE_URL + item.logo_path})` }}></div>\n          )\n        })}\n      </span>\n      <span className=\"hidden group-hover:block px-3 absolute left-0 top-0 duration-700 transition-[display] flex-col bg-textColor rounded-lg bg-opacity-100 shadow-lg max-h-96 w-96 overflow-y-auto text-lg no-scrollbar xs:bottom-0\">\n        {watcher && watcher.map((item, index) => {\n          return (\n            <div key={index}  className=\"flex items-center text-center text-white divide-y-0\">\n              {/* <div  className={`w-16 rounded-full z-10 h-16 my-5 bg-cover bg-no-repeat`} style={{ backgroundImage: `url(${process.env.REACT_APP_IMAGE_URL + item.logo_path})` }}></div> */}\n              <img className=\"w-12 h-12 z-10 rounded-full my-5\" src={process.env.REACT_APP_IMAGE_URL + item.logo_path}></img>\n              <p className=\"ml-3 text-md text-left\">{item.provider_name}</p>\n            </div>\n          )\n        })}\n      </span>\n      <div className=\"text-white h-12 block rounded-full z-10 content-center group-hover:hidden ml-1 text-lg\">{watcher.length <= 3 ? '' : `+${watcher.length - 3}`}</div>\n    </div>\n  )\n};\n\nexport default ProviderCard;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst RatingWrapper = styled.div`\n    display: inline-block;\n    font-size: 1.5rem;\n    font-family: 'Roboto', sans-serif;\n    line-height: 1;\n    \n    &::before {\n      content: '★★★★★';\n      letter-spacing: 3px;\n      background: ${props => props.theme.bg};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n`\n\nconst Rating = () =>{\n    return(\n        <RatingWrapper className=\"Stars\" aria-label=\"Rating of this product is 2.3 out of 5.\"></RatingWrapper>\n    )\n}\n\nexport default Rating;","import { ApiHelper } from '../ApiHelper'\n\nconst apiHelper = new ApiHelper();\nconst url = process.env.REACT_APP_MOVIE_URL;\nconst apiKey = process.env.REACT_APP_MOVIE_API_KEY;\n\nexport class TvService{\n    getTvShowDetailById(tv_id){\n        const api = `${url}/tv/${tv_id}?api_key=${apiKey}&append_to_response=credits`\n        return apiHelper.get(api);\n    }\n\n    getTvWatchProviderById(tv_id){\n        const api = `${url}/tv/${tv_id}/watch/providers?api_key=${apiKey}`\n        return apiHelper.get(api);\n    }\n\n    getEpisodesBySeriesIdAndSeasonNo(series_id, season_number){\n        const api = `${url}/tv/${series_id}/season/${season_number}?api_key=${apiKey}`;\n        return apiHelper.get(api);\n    }\n}\nexport default TvService;","import React, { useEffect, useState } from \"react\";\nimport { gsap } from 'gsap';\nimport TvService from \"../Services/MoviesServices/TvService\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft } from \"@fortawesome/free-solid-svg-icons\";\n\nconst tvService = new TvService;\nconst SeasonsAndEpisodes = ({ item }) => {\n  const [selectedSeason, setSeason] = useState(null);\n  const [episodes, setEpisodes] = useState([]);\n\n  const seasonEpisodeTimeLine = gsap.timeline();\n\n  useEffect(() => {\n    if (selectedSeason !== null) {\n      animateEpisode();\n    } else {\n      animateSeason();\n    }\n  }, [selectedSeason, episodes]);\n\n  const selectSeason = (season) => {\n    console.log(\"season \", selectedSeason, \" \", season)\n    if (season != null) {\n      // hide seasons and show episodes\n      setSeason(season);\n      getEpisodes(season);\n    } else {\n      // hide episodes and show season\n      animateSeason();\n    }\n  }\n\n  const getEpisodes = (season) => {\n    tvService.getEpisodesBySeriesIdAndSeasonNo(item.id, season.season_number).then((res) => {\n      setEpisodes(res.data.episodes);\n\n    }).then(() => {\n      animateEpisode();\n    })\n  };\n  const animateSeason = () => {\n    seasonEpisodeTimeLine\n      .to(\".episode-cards\",\n        {\n          display: \"none\",\n        }\n      ).fromTo(\".season-cards\",\n        {\n          display: \"none\",\n          x: -30,\n          opacity: 0,\n          display: \"flex\"\n        },\n        {\n          x: 0,\n          opacity: 1,\n          stagger: .2,\n          duration: .8,\n          ease: \"power2.out\",\n          delay: 0,\n          display: \"flex\",\n        }\n      )\n  }\n  const animateEpisode = () => {\n    console.log(\"episodes \", episodes);\n    seasonEpisodeTimeLine\n      .to(\".season-cards\",\n        {\n          display: \"none\",\n        }\n      )\n      .fromTo(\".episode-cards\",\n        {\n          display: \"none\",\n          x: -30,\n          opacity: 0,\n        },\n        {\n          display: \"flex\",\n          x: 0,\n          stagger: .2,\n          opacity: 1,\n          duration: .8,\n          ease: \"power2.out\",\n          delay: 0\n        }\n      )\n  }\n  const seasonAndEpisode = (item, id, type) => {\n    let poster = type == 'season' ? item.poster_path : item.still_path;\n    let url = process.env.REACT_APP_BG_IMAGE_URL;\n    let width = type == 'season' ? '20rem' : '40rem';\n    let height = '30rem';\n    return (\n      <div key={id} className={`relative group ${type}-cards bg-cover  bg-no-repeat m-3 ml-0 rounded-lg overflow-hidden cursor-default flex`}\n        style={{ backgroundImage: `url(${url + poster})`, height: `${height}`, minWidth: `${width}` }}\n      >\n        <p className=\"text-center absolute text-white flex transition-all text-xl font-bold mt-auto bg-mainDarkOpacity group-hover:hidden m-5\">{item.name}</p>\n        <div className=\"bg-black bg-opacity-70 h-full absolute bottom-0 w-full opacity-0 p-5  group-hover:opacity-100 transition-all duration-500\">\n          <p className=\"text-center text-white transition-all text-xl font-bold h-28\">{item.name}\n            {type == 'season' ? <div className=\"text-black text-md bg-cardBackground rounded-lg p-2 cursor-pointer\" onClick={() => { selectSeason(item) }}>All Episode</div> : null}\n          </p>\n          <div className=\"text-white text-md h-80 overflow-y-auto no-scrollbar\">\n            {item.overview}\n          </div>\n        </div>\n      </div>\n    )\n  }\n  return (\n    <div className=\"w-100 \" style={{ minHeight: '30rem' }}>\n      <div className=\"bg-main bg-opacity-40 mt-4 text-lg text-white font-semibold rounded-lg py-2 px-5 w-full\">{item.number_of_seasons} Seasons & {item.number_of_episodes} Episodes\n      </div>\n      <div className=\"flex overflow-x-auto w-full h-auto flex-row no-scrollbar\">\n        {/* All episodes */}\n        {/* <div className=\"all-episodes hidden overflow-x-auto w-full h-auto flex-row no-scrollbar\"> */}\n        <div className=\"bg-mainDarkOpacity bg-cover bg-no-repeat episode-cards m-3 rounded-lg flex flex-col text-center text-lg text-black\" style={{ backgroundImage: `url(${process.env.REACT_APP_BG_IMAGE_URL + selectedSeason?.poster_path})`, height: '30rem', minWidth: '20rem' }}>\n          <div className=\"m-auto bg-black rounded-lg bg-opacity-70 p-5 h-full w-full flex flex-col text-white justify-center\">\n            <p className=\"text-xl font-bold\">{selectedSeason?.name}</p>\n            <p className=\"text-xl font-bold\">{episodes.length} Episodes</p>\n            <button className=\"text-xl w-fit bg-white text-black py-1 px-4 rounded-lg w-fit\" onClick={() => { selectSeason(null) }}>  <FontAwesomeIcon icon={faArrowLeft} className=\"mr-5 animate-fadeIn\" />All season</button>\n          </div>\n        </div>\n        {\n          episodes?.map((episode, id) => {\n            return (\n              seasonAndEpisode(episode, id, 'episode')\n            )\n          })\n        }\n        {/* All season */}\n        {\n          item?.seasons?.map((season, id) => {\n            return (\n              seasonAndEpisode(season, id, 'season')\n            )\n          })\n        }\n        {/* </div> */}\n      </div>\n    </div>\n  )\n}\n\nexport default SeasonsAndEpisodes;","import React, { useEffect, useState } from \"react\";\nimport { TvService } from \"../../Services/MoviesServices/TvService.js\";\nimport Anime from \"animejs\";\nimport { useParams } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from 'react-router-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport { getRatingBG } from \"../../utils/getRatingBg.js\";\nimport Rating from \"../Rating/Rating.js\";\nimport ProviderCard from \"../ProviderCard.js\";\nimport { useRegionContext } from \"../../utils/RegionContext.js\";\nimport SeasonsAndEpisodes from \"../seasonsAndEpisodes.js\";\nimport Cast from \"../Cast.js\";\n\nconst anime = Anime;\nconst tvShowService = new TvService;\nconst TvDetails = () => {\n    const { state, dispatch } = useRegionContext();\n    const [item, setItem] = useState('');\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [watcher, setWatcher] = useState('');\n    const [creditsTitle, setCreditsTitle] = useState(\"\");\n    const [movieCast, setMovieCast] = useState('');\n    useEffect(() => {\n        getTvDetails();\n        getTvWatcherDetails();\n        anime({\n            targets: '.genre-anime',\n            keyframes: [\n                // { translateX: 0 },\n                { translateX: 10, opacity: 0 },\n                { translateX: 0, opacity: 1 }\n            ],\n            duration: 1500,\n            delay: anime.stagger(100),\n            easing: 'easeOutElastic(1, .8)',\n        });\n    }, []);\n\n    const getTvDetails = () => {\n        tvShowService.getTvShowDetailById(id).then(res => {\n            if (res.status == 200) {\n                let data = res.data;\n                getTvCrew(res.data.credits);\n                console.log(data, \" tvDetails \");\n                data.spoken_languages?.map((lang) => {\n                    if (lang.iso_639_1 == data.original_language) {\n                        data.original_language = lang.name;\n                    }\n                })\n                setItem(res.data);\n            } else {\n                console.log(\"something wrong\");\n            }\n        })\n    }\n    const getTvCrew = (credits) => {\n        if (credits && (credits.cast || credits.crew)) {\n            console.log(\"credits \", credits);\n            let cast = [], title = [];\n            if (credits.cast.length) {\n                cast = credits.cast.filter(res => res.order <= 20);\n                cast = cast.concat(credits.crew.filter(res => res.popularity > 1 && res.profile_path));\n                cast.map((res, i) => {\n                    if (title.indexOf(res.known_for_department) == -1) {\n                        title.push(res.known_for_department);\n                        // console.log(res);\n                    }\n                })\n\n                // Remove duplicates\n                cast = cast.filter((obj1, i, arr) => arr.findIndex(obj2 => (obj2.name === obj1.name) && (obj2.character === obj1.character)) === i);\n            }\n            setCreditsTitle(title);\n            setMovieCast(cast);\n        }\n    }\n    const getTvWatcherDetails = () => {\n        tvShowService.getTvWatchProviderById(id).then((res) => {\n            // console.log(res,\" tv details\");\n            if (res.data && res.data.results && res.data.results[state.countryCode]) {\n                let data = [res.data.results[state.countryCode].flatrate, res.data.results[state.countryCode].buy, res.data.results[state.countryCode].rent]\n                data = data.flat().filter((item) => { return item });\n                setWatcher(data);\n            }\n        })\n    }\n    function time_convert(num) {\n        var hours = Math.floor(num / 60);\n        var minutes = num % 60;\n        return (hours + \"h \" + minutes + \"m\");\n    }\n    return (\n\n        <div className=\"Note p-5\" key={id}>\n            <div className=\"grid lg:grid-cols-1 pb-5 p-5 m-auto\">\n                <div className=\"grid justify-end\">\n                    <button className=\"text-xl w-fit\" onClick={() => { navigate(-1) }}>  <FontAwesomeIcon icon={faArrowLeft} className=\"mr-5\" />Back</button>\n                </div>\n                <div className=\"grid xs:grid-col-2 xs:grid-row-1 lg:grid-col-1 lg:grid-row-2 shadow-mainColorShadow relative rounded\">\n                    <div className=\"text-bg-text text-white absolute opacity-20 font-extrabold right-5 leading-none\">\n                            TV\n                    </div>\n                    <div className=\"bg-cover bg-no-repeat rounded\" style={{ backgroundImage: `url(${process.env.REACT_APP_BG_IMAGE_URL + item.backdrop_path})` }}>\n                        <div className=\"overflow-hidden bg-textColor bg-opacity-50 md:flex md:flex-row xs:flex xs:flex-col p-5 \">\n                            <div className=\"md:row-span-1 md:col-span-1 rounded-tl rounded-tr h-fit\">\n                                <div className=\"flex flex-col md:pr-5\">\n                                    <img className=\"rounded-lg z-0 w-full\" src={process.env.REACT_APP_IMAGE_URL + item.poster_path} alt=\"poster\" />\n                                    <div className=\"\">\n                                        <div className=\"flex justify-between items-center w-full\">\n                                            <div className=\"mr-3 text-xl font-bold text-white\">\n                                                {(item && item.vote_average && (item.vote_average.toFixed(1)))}/10\n                                            </div>\n                                            <ThemeProvider theme={getRatingBG(item.vote_average)}>\n                                                <Rating id={item.id + 'rating'} />\n                                            </ThemeProvider>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"grid grid-row-2 grid-cols-1 w-full overflow-y-scroll no-scrollbar\" style={{ height: '75rem' }}>\n                                <div className=\"bg-main row-span-1 bg-opacity-40 w-full rounded-lg xs:m-0 p-5 h-full\">\n                                    <div className=\"flex justify-start items-center flex-wrap\">\n                                        <div className=\"w-full d-flex\">\n                                            <p className=\"lg:text-title sm:text-4xl  text-white font-bold align-baseline d-flex h-full\">{item && item.name} <span className=\"border rounded-md px-1 text-md d-flex items-center h-full my-auto w-fit\">{item && item.original_language}</span> </p>\n                                        </div>\n                                        <div className=\"xs:flex md:flex xs:flex-row xs:items-start xs:flex-col md:flex-row xs:start md:items-center md:align-middle md:divide-x md:justify-between w-fit h-fit\">\n                                            <div className=\"text-white flex flex-none h-full mr-2\">\n                                                <p className=\"text-lg text-white font-normal ml-2\">First on air {item.first_air_date}</p>\n                                            </div>\n                                            <div className=\"pr-2 flex align-middle text-center items-center text-white flex-none h-full\">\n                                                <p className=\"text-lg text-white font-normal ml-2\">Last on air {item.last_air_date}</p>\n                                            </div>\n                                            <div className=\"pr-2 text-white flex flex-none\">\n                                                <p className=\"text-lg text-white font-normal ml-2\">{item.original_language}</p>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"justify-start mt-3 w-full flex-wrap pr-5 xs:my-3 xs:flex-col md:flex-row text-white\">\n                                        <div className=\"md:flex xs:grid xs:flex-col md:flex-row text-white\">\n                                            <div className=\"flex-initial \">\n                                                <p className=\"font-bold text-xl text-white mb-1\">Languages</p>\n                                                <p className=\"\">{item && item.spoken_languages && item.spoken_languages.map((lang, langIndex) => {\n                                                    return (\n                                                        <span className={`${langIndex == 0 ? '' : 'ml-2'} text-md text-white font-normal`} key={langIndex}>{lang && lang.english_name} <span className=\"text-white bg-white bg-opacity-30 font-bold rounded-md px-1 py-0 uppercase\">{lang && lang.iso_639_1}</span><span className={`${langIndex == item.spoken_languages.length - 1 ? 'hidden' : ''}`}>,</span></span>\n                                                    )\n                                                })}\n                                                </p>\n                                            </div>\n                                            <div className=\"flex-initial md:ml-10\">\n                                                <p className=\"font-bold text-xl text-white mb-1\">Genre</p>\n                                                {/* <div className=\"flex justify-start mt-3 items-center w-full flex-wrap pr-5 xs:my-3\"> */}\n                                                    {item && item.genres && item.genres.map((genre, index) => {\n                                                        return (\n                                                            <span key={index} className={`border px-4 py-2 border-white bg-white cursor-default bg-opacity-25 rounded-full text-white tracking-wide w-fit text-md mr-1 hover:bg-white hover:text-main hover:border-none duration-300 transition-all ${index == 0 ? '' : 'ml-2'}`}>{genre.name}</span>\n                                                        )\n                                                    })}\n                                                {/* </div> */}\n                                            </div>\n                                            <div className=\"flex-initial md:ml-10\">\n                                                <p className=\"font-bold text-xl mb-0\">Watch on</p>\n                                                {watcher ?\n                                                    <div className=\"flex\">\n                                                        <ProviderCard watcher={watcher} />\n                                                    </div>\n                                                    : <p className=\"text-cardBackground text-lg\">Coming Soon...</p>}\n\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"grid grid-cols-1 grid-row-1\">\n                                        <div className=\"col-span-1\">\n                                        <div className=\"md:grid-cols-2 md:grid-rows-1 xs:grid-row-2 xs:grid-col-1 grid\">\n                                                    <div className=\" text-white col-span-1 row-span-1\">\n                                                        <p className=\"font-bold text-xl mb-0\">Description</p>\n                                                        <p className=\"text-lg text-white font-normal\">{item && item.overview}</p>\n                                                    </div>\n                                                </div>\n\n                                        </div>\n                                        <div className=\"col-span-1\"></div>\n                                    </div>\n                                </div>\n                                <div>\n                                    <SeasonsAndEpisodes item={item} />\n                                </div>\n                                <div>\n                                    <Cast movieCast={movieCast} creditsTitle={creditsTitle} />\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n\n}\n\nexport default TvDetails;\n","export const getRatingBG = (rating) => {\n  return {\n      bg: `linear-gradient(90deg, var(--color-starBackground) calc(${rating} / 10 * 100%), var(--color-ratingBg) calc(${rating} / 10 * 100%))`\n  }\n}\n"],"names":["_ref","movieCast","creditsTitle","active","setActive","useState","_jsxs","children","_jsx","className","map","title","index","concat","onClick","class","res","known_for_department","id","profile_path","Image","src","process","onError","i","target","style","display","name","character","watcher","slice","item","backgroundImage","logo_path","provider_name","length","RatingWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","theme","bg","Rating","apiHelper","ApiHelper","url","apiKey","TvService","getTvShowDetailById","tv_id","api","get","getTvWatchProviderById","getEpisodesBySeriesIdAndSeasonNo","series_id","season_number","tvService","_item$seasons","selectedSeason","setSeason","episodes","setEpisodes","seasonEpisodeTimeLine","gsap","timeline","useEffect","animateEpisode","animateSeason","selectSeason","season","console","log","getEpisodes","then","data","to","fromTo","x","opacity","stagger","duration","ease","delay","seasonAndEpisode","type","poster","poster_path","still_path","width","height","minWidth","overview","minHeight","number_of_seasons","number_of_episodes","FontAwesomeIcon","icon","faArrowLeft","episode","seasons","anime","Anime","tvShowService","TvDetails","state","dispatch","useRegionContext","setItem","useParams","navigate","useNavigate","setWatcher","setCreditsTitle","setMovieCast","getTvDetails","getTvWatcherDetails","targets","keyframes","translateX","easing","status","_data$spoken_language","getTvCrew","credits","spoken_languages","lang","iso_639_1","original_language","cast","crew","filter","order","popularity","indexOf","push","obj1","arr","findIndex","obj2","results","countryCode","flatrate","buy","rent","flat","backdrop_path","alt","vote_average","toFixed","ThemeProvider","getRatingBG","first_air_date","last_air_date","langIndex","english_name","genres","genre","ProviderCard","SeasonsAndEpisodes","Cast","rating"],"sourceRoot":""}