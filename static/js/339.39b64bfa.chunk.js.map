{"version":3,"file":"static/js/339.39b64bfa.chunk.js","mappings":"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","sources":["Widgets/Cast.js","Services/MoviesServices/MovieService.js","Widgets/MovieDetail/MovieDetails.js","Widgets/ProviderCard.js","Widgets/Rating/Rating.js","utils/getRatingBg.js"],"sourcesContent":["import React, { useEffect, useState, useRef} from \"react\";\nimport { Image } from 'semantic-ui-react';\nimport NoUser from \"../assets/nouser.png\";\n\nconst Cast = ({ movieCast, creditsTitle }) => {\n  const [active, setActive] = useState('Acting');\n  return (\n    <div>\n      <div className=\"w-full mt-3\">\n        <div className=\"flex gap-4 overflow-x-auto content-end bg-textColor bg-opacity-50 rounded-lg text-white \">\n          {\n            creditsTitle && creditsTitle.map((title, index) => {\n              return (\n                <p key={index} className={`${active === title ? 'bg-white text-main font-bold' : ''}  transition-all hover:[transform:rotateX(180deg)] opacity-100 cursor-pointer p-2 rounded-lg text-md h-fit items-baseline inline`} onClick={() => { setActive(title) }}>{title}</p>\n              )\n            })\n          }\n        </div>\n      </div>\n      <div class=\"flex flex-col  m-auto p-auto no-scrollbar\">\n        <div\n          class=\"flex overflow-x-scroll  no-scrollbar\"\n        >\n\n          <div class=\"flex mt-2\">\n            {\n              movieCast && movieCast.map((res, index) => {\n                return (\n                  res.known_for_department == active ?\n                    <div key={index} className={`${res.id} relative w-52 group mr-5 flex bg-white rounded-lg h-80 transition-all duration-300 overflow-hidden text-center hover:rounded-lg`}>\n                      { res.profile_path ? <Image className=\"group-hover:rounded-lg\" src={process.env.REACT_APP_IMAGE_URL + res.profile_path} onError={i => i.target.style.display='none'} /> : \n                        <Image className=\"group-hover:rounded-lg bg-white m-auto opacity-20\" src={NoUser} />\n                       }\n                      <div className=\"absolute text-left bottom-0 w-full p-1 bg-opacity-40 duration-300 bg-gradient-to-t from-black to-none\">\n                        <p className=\"text-lg font-bold text-white mb-0\">{res.name}</p>\n                        <p className=\"text-cardBG text-md group-hover:hidden duration-300 transition-all\">{res.character}</p>\n                      </div>\n                    </div>\n                    : null\n                )\n              })\n            }\n          </div>\n        </div>\n      </div>\n\n    </div>\n  )\n};\n\nexport default Cast;","import { ApiHelper } from '../ApiHelper'\n\nconst apiHelper = new ApiHelper();\nconst url = process.env.REACT_APP_MOVIE_URL;\nconst apiKey = process.env.REACT_APP_MOVIE_API_KEY;\n\nexport class MovieService{\n    getMovieDetailById(movie_id){\n        const api = `${url}/movie/${movie_id}?api_key=${apiKey}&append_to_response=release_dates&append_to_response=credits`\n        return apiHelper.get(api);\n    }\n    getMovieCreditsById(movie_id){\n        const api = `${url}/movie/${movie_id}/credits?api_key=${apiKey}`\n        return apiHelper.get(api);\n    }\n    getMovieImagesById(movie_id){\n        const api = `${url}/movie/${movie_id}/images?api_key=${apiKey}`\n        return apiHelper.get(api);\n    }\n    getMovieWatchProviderById(movie_id){\n        const api = `${url}/movie/${movie_id}/watch/providers?api_key=${apiKey}`\n        return apiHelper.get(api);\n    }\n}\nexport default MovieService;","import React, { Component, useEffect, useState } from \"react\";\nimport { MovieService } from \"../../Services/MoviesServices/MovieService.js\";\nimport { useParams } from 'react-router-dom';\nimport { ThemeProvider } from \"styled-components\";\nimport Rating from \"../Rating/Rating.js\";\nimport { getRatingBG } from \"../../utils/getRatingBg.js\";\nimport Anime from \"animejs\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faArrowLeft, faClock } from \"@fortawesome/free-solid-svg-icons\";\nimport { useNavigate } from 'react-router-dom';\nimport { lazy } from \"react\";\nimport { useRegionContext } from \"../../utils/RegionContext.js\";\nimport ProviderCard from \"../ProviderCard.js\";\nimport Cast from \"../Cast.js\";\nconst anime = Anime;\n\nconst movieService = new MovieService\n\nconst MovieDetail = () => {\n    const { state, dispatch } = useRegionContext();\n    const [item, setItem] = useState('');\n    const [creditsTitle, setCreditsTitle] = useState(\"\");\n    const [movieCrew, setMovieCrew] = useState('');\n    const [movieCast, setMovieCast] = useState('');\n    // const [movieImages, setMovieImages] = useState('');\n    const [watcher, setWatcher] = useState('');\n    const [userRegion, setUserRegion] = useState('');\n    const { id } = useParams();\n    const navigate = useNavigate();\n    useEffect(() => {\n        getMovieDetails();\n        getMovieWatchProvider();\n        anime({\n            targets: '.genre-anime',\n            keyframes: [\n                { translateX: 10, opacity: 0 },\n                { translateX: 0, opacity: 1 }\n            ],\n            duration: 1500,\n            delay: anime.stagger(100),\n            easing: 'easeOutElastic(1, .8)',\n        });\n    }, []);\n\n\n    const getMovieDetails = () => {\n        movieService.getMovieDetailById(id).then(res => {\n            if (res.status == 200) {\n                let data = res.data;\n                getMovieCredits(res.data.credits);\n                data.spoken_languages?.map((lang) => {\n                    if (lang.iso_639_1 == data.original_language) {\n                        data.original_language = lang.name;\n                    }\n                })\n                setItem(res.data);\n                console.log(res.data);\n            } else {\n                console.log(\"something wrong\");\n            }\n\n        }).catch(err => {\n            navigate(-1);\n        })\n    }\n\n    const getMovieCredits = (credits) => {\n        if (credits && (credits.cast || credits.crew)) {\n            console.log(\"credits \", credits);\n            let cast = [], crew = [], title = [];\n            if (credits.cast.length) {\n                cast = credits.cast.filter(res => res.order <= 20);\n                cast = cast.concat(credits.crew.filter(res => res.popularity > 10 && res.profile_path));\n                cast.map((res, i) => {\n                    if (title.indexOf(res.known_for_department) == -1) {\n                        title.push(res.known_for_department);\n                        // console.log(res);\n                    }\n                })\n\n                // Remove duplicates\n                cast = cast.filter((obj1, i, arr) => arr.findIndex(obj2 => (obj2.name === obj1.name) && (obj2.character === obj1.character)) === i);\n            }\n            setCreditsTitle(title);\n            setMovieCast(cast);\n            setMovieCrew(credits.crew);\n        }\n    }\n    const getMovieWatchProvider = () => {\n        movieService.getMovieWatchProviderById(id).then(res => {\n            if (res.data && res.data.results && res.data.results[state.countryCode]) {\n                let data = [res.data.results[state.countryCode].flatrate, res.data.results[state.countryCode].buy, res.data.results[state.countryCode].rent]\n                data = data.flat().filter((item) => { return item });\n                setWatcher(data);\n\n            }\n        }).catch(e => {\n            console.log(e);\n        })\n    }\n    function time_convert(num) {\n        var hours = Math.floor(num / 60);\n        var minutes = num % 60;\n        return (hours + \"h \" + minutes + \"m\");\n    }\n    return (\n        <div className=\"Note p-5\" key={id}>\n            <div className=\" grid lg:grid-cols-1 pb-5 lg:w-6/6  p-5 xs:w-5/6   m-auto\">\n                <div className=\"grid justify-end cursor-pointer\">\n                    <button className=\"text-xl w-fit\" onClick={() => { navigate(-1) }}>  <FontAwesomeIcon icon={faArrowLeft} className=\"mr-5\" />Back</button>\n                </div>\n                <div className=\"grid xs:grid-col-2 xs:grid-row-1 lg:grid-col-1 lg:grid-row-2 shadow-mainColorShadow relative rounded\">\n                <div className=\"text-bg-text text-white absolute opacity-20 font-extrabold right-5 leading-none \">\n                            MOVIE\n                    </div>\n                    <div className=\"md:row-span-1 md:col-span-1 rounded-tl rounded-tr\">\n                        <div className=\" bg-cover bg-no-repeat rounded\" style={{ backgroundImage: `url(${process.env.REACT_APP_BG_IMAGE_URL + item.backdrop_path})` }}>\n                            <div className=\"overflow-hidden bg-textColor bg-opacity-50 md:flex md:flex-row xs:flex xs:flex-col p-5 \">\n                                <div className=\"flex flex-col md:pr-5\">\n                                    <img className=\"rounded-lg z-0 w-full\" src={process.env.REACT_APP_IMAGE_URL + item.poster_path} alt=\"poster\" />\n                                    <div className=\"\">\n                                        <div className=\"flex justify-between items-center w-full\">\n                                            <div className=\"mr-3 text-xl font-bold text-white\">\n                                                {(item && item.vote_average && (item.vote_average.toFixed(1)))}/10\n                                            </div>\n                                            <ThemeProvider theme={getRatingBG(item.vote_average)}>\n                                                <Rating id={item.id + 'rating'} />\n                                            </ThemeProvider>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"grid grid-row-2 grid-cols-1 h-full w-full\">\n                                    <div className=\"bg-main row-span-1 bg-opacity-40 w-full rounded-lg xs:m-0 p-5 h-full\">\n                                        <div className=\"flex justify-start items-center flex-wrap\">\n                                            <div className=\"w-full d-flex\">\n                                                <p className=\"lg:text-title sm:text-4xl  text-white font-bold align-baseline d-flex h-full\">{item && item.title} <span className=\"border rounded-md px-1 text-md d-flex items-center h-full my-auto w-fit\">{item && item.original_language}</span> </p>\n                                            </div>\n                                            <div className=\"xs:flex md:flex xs:flex-row xs:items-start xs:flex-col md:flex-row xs:start md:items-center md:align-middle md:divide-x md:justify-between w-fit h-fit\">\n                                                <div className=\"text-white flex flex-none h-full mr-2\">\n                                                    <p className=\"text-lg text-white font-normal ml-0\">{item.status} - {item.release_date}</p>\n\n                                                </div>\n                                                {\n                                                    item.runtime == 0 ? null : <div className=\"pl-2 flex align-middle text-center items-center text-white flex-none h-full\">\n                                                        <FontAwesomeIcon icon={faClock} className=\"text-xl mr-2\" />{item && item.runtime ? <p className=\"text-lg m-0\">{time_convert(item.runtime)}</p> : null}\n                                                    </div>\n                                                }\n                                                {/* <div className=\"text-white flex flex-none\">\n                                                    <p className=\"text-lg text-white font-normal ml-2\">Original Language {item.original_language}</p>\n                                                </div> */}\n\n                                            </div>\n                                            <div className=\"justify-start mt-3 w-full flex-wrap pr-5 xs:my-3 xs:flex-col md:flex-row text-white\">\n                                                <div className=\"md:flex xs:grid xs:flex-col md:flex-row\">\n                                                    \n                                                    <div className=\"flex-initial md:ml-0\">\n                                                        <p className=\"font-bold text-xl mb-1\">Languages</p>\n                                                        <p className=\"\">{item && item.spoken_languages && item.spoken_languages.map((lang, langIndex) => {\n                                                            return (\n                                                                <span className={`${langIndex == 0 ? '' : 'ml-2'} text-md text-white font-normal`} key={langIndex}>{lang && lang.english_name} <span className=\"text-white bg-white bg-opacity-30 font-bold rounded-md px-1 py-0 uppercase\">{lang && lang.iso_639_1}</span><span className={`${langIndex == item.spoken_languages.length - 1 ? 'hidden' : ''}`}>,</span></span>\n                                                            )\n                                                        })}\n                                                        </p>\n                                                    </div>\n                                                    <div className=\"flex-initial md:ml-10\">\n                                                        <p className=\"font-bold text-xl text-white mb-1\">Genre</p>\n                                                        {item && item.genres && item.genres.map((genre, index) => {\n                                                            return (\n                                                                <span key={index} className={`border px-4 py-2 border-white bg-white cursor-default bg-opacity-25 rounded-full text-white tracking-wide w-fit text-md mr-1 hover:bg-white hover:text-main hover:border-none duration-300 transition-all ${index == 0 ? '' : 'ml-2'}`}>{genre.name}\n                                                                {/* <span className={`${index == item.genres.length - 1 ? 'hidden' : ''}`}>,</span> */}\n                                                                </span>\n                                                            )\n                                                        })}\n                                                    </div>\n                                                    <div className=\"flex-initial md:ml-10\">\n                                                            <div className=\"col-span-1\">\n                                                                <p className=\"font-bold text-xl mb-0\">Streaming</p>\n                                                                {watcher ?\n                                                                    <div className=\"flex\">\n                                                                        <ProviderCard watcher={watcher} />\n                                                                    </div>\n                                                                    : <p className=\"text-cardBackground text-lg\">Coming Soon...</p>}\n\n                                                            </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"grid grid-cols-1 grid-row-1 mt-3\">\n                                            <div className=\"col-span-1\">\n                                                <div className=\"md:grid-cols-2 md:grid-rows-1 xs:grid-row-2 xs:grid-col-1 grid\">\n                                                    <div className=\" text-white col-span-1 row-span-1\">\n                                                        <p className=\"font-bold text-xl mb-0\">Description</p>\n                                                        <p className=\"text-lg text-white font-normal\">{item && item.overview}</p>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                            {/* <div className=\"col-span-1\"></div> */}\n                                        </div>\n                                    </div>\n                                    <div className=\"row-span-1\">\n                                        <Cast movieCast={movieCast} creditsTitle={creditsTitle} />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </div>\n        </div>\n    )\n}\n\nexport default MovieDetail;","import React from \"react\";\n\nconst ProviderCard = ({ watcher }) => {\n  return (\n    <div className=\"z-10 flex group bg-opacity-20 h-auto cursor-pointer rounded-lg  transition-all  hover:bg-opacity-0 relative\">\n      <span className=\" flex \">\n        {watcher && watcher.slice(0, 3).map((item, index) => {\n          return (\n            <div key={index} className={`${index == 0 ? '' : '-ml-6'} w-12 rounded-full z-10 bg-cover h-12 group-hover:opacity-0`} style={{ backgroundImage: `url(${process.env.REACT_APP_IMAGE_URL + item.logo_path})` }}></div>\n          )\n        })}\n      </span>\n      <span className=\"hidden group-hover:block px-3 absolute left-0 top-0 duration-700 transition-[display] flex-col bg-textColor rounded-lg bg-opacity-100 shadow-lg max-h-96 w-96 overflow-y-auto text-lg no-scrollbar xs:bottom-0\">\n        {watcher && watcher.map((item, index) => {\n          return (\n            <div key={index}  className=\"flex items-center text-center text-white divide-y-0\">\n              {/* <div  className={`w-16 rounded-full z-10 h-16 my-5 bg-cover bg-no-repeat`} style={{ backgroundImage: `url(${process.env.REACT_APP_IMAGE_URL + item.logo_path})` }}></div> */}\n              <img className=\"w-12 h-12 z-10 rounded-full my-5\" src={process.env.REACT_APP_IMAGE_URL + item.logo_path}></img>\n              <p className=\"ml-3 text-md text-left\">{item.provider_name}</p>\n            </div>\n          )\n        })}\n      </span>\n      <div className=\"text-white h-12 block rounded-full z-10 content-center group-hover:hidden ml-1 text-lg\">{watcher.length <= 3 ? '' : `+${watcher.length - 3}`}</div>\n    </div>\n  )\n};\n\nexport default ProviderCard;","import React from 'react';\nimport styled from \"styled-components\";\n\nconst RatingWrapper = styled.div`\n    display: inline-block;\n    font-size: 1.5rem;\n    font-family: 'Roboto', sans-serif;\n    line-height: 1;\n    \n    &::before {\n      content: '★★★★★';\n      letter-spacing: 3px;\n      background: ${props => props.theme.bg};\n      -webkit-background-clip: text;\n      -webkit-text-fill-color: transparent;\n    }\n`\n\nconst Rating = () =>{\n    return(\n        <RatingWrapper className=\"Stars\" aria-label=\"Rating of this product is 2.3 out of 5.\"></RatingWrapper>\n    )\n}\n\nexport default Rating;","export const getRatingBG = (rating) => {\n  return {\n      bg: `linear-gradient(90deg, var(--color-starBackground) calc(${rating} / 10 * 100%), var(--color-ratingBg) calc(${rating} / 10 * 100%))`\n  }\n}\n"],"names":["_ref","movieCast","creditsTitle","active","setActive","useState","_jsxs","children","_jsx","className","map","title","index","concat","onClick","class","res","known_for_department","id","profile_path","Image","src","process","onError","i","target","style","display","name","character","apiHelper","ApiHelper","url","apiKey","MovieService","getMovieDetailById","movie_id","api","get","getMovieCreditsById","getMovieImagesById","getMovieWatchProviderById","anime","Anime","movieService","MovieDetail","state","dispatch","useRegionContext","item","setItem","setCreditsTitle","movieCrew","setMovieCrew","setMovieCast","watcher","setWatcher","userRegion","setUserRegion","useParams","navigate","useNavigate","useEffect","getMovieDetails","getMovieWatchProvider","targets","keyframes","translateX","opacity","duration","delay","stagger","easing","then","status","_data$spoken_language","data","getMovieCredits","credits","spoken_languages","lang","iso_639_1","original_language","console","log","catch","err","cast","crew","length","filter","order","popularity","indexOf","push","obj1","arr","findIndex","obj2","results","countryCode","flatrate","buy","rent","flat","e","FontAwesomeIcon","icon","faArrowLeft","backgroundImage","backdrop_path","poster_path","alt","vote_average","toFixed","ThemeProvider","theme","getRatingBG","Rating","release_date","runtime","faClock","num","Math","floor","langIndex","english_name","genres","genre","ProviderCard","overview","Cast","slice","logo_path","provider_name","RatingWrapper","styled","div","_templateObject","_taggedTemplateLiteral","props","bg","rating"],"sourceRoot":""}